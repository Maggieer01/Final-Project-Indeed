library(tm)
library(SnowballC)
library(wordcloud)
library(RColorBrewer)
library(RCurl)
library(XML)
library(stringr)
library(zoo)
library(knitr)
listings <- data.frame(title=character(),
company=character(),
location=character(),
summary=character(),
link=character(),
description = character(),
stringsAsFactors=FALSE)
## you can put in a bigger number than 100
for (i in seq(0, 1000, 10)){
url_ds <- paste0('https://www.indeed.com/jobs?q=data+scientist%2C+statistics&start=',i)
var <- read_html(url_ds)
#job title
title <-  var %>%
html_nodes('#resultsCol .jobtitle') %>%
html_text() %>%
str_extract("(\\w+.+)+")
#company
company <- var %>%
html_nodes('#resultsCol .company') %>%
html_text() %>%
str_extract("(\\w+).+")
#location
location <- var %>%
html_nodes('#resultsCol .location') %>%
html_text() %>%
str_extract("(\\w+.)+,.[A-Z]{2}")
#summary
summary <- var %>%
html_nodes('#resultsCol .summary') %>%
html_text() %>%
str_extract(".+")
#link
link <- var %>%
html_nodes('#resultsCol .jobtitle .turnstileLink, #resultsCol a.jobtitle') %>%
html_attr('href')
link <- paste0("https://www.indeed.com",link)
listings <- rbind(listings, as.data.frame(cbind(title,
company,
location,
summary,
link)))
}
listings <- read.csv("listings.csv")
View(listings)
text <- listings$description
descript_df <- tibble(line = 1:nrow(listings), text = text)
descript_df <- descript_df %>% unnest_tokens(word, text)
##  Remove stop-words such as the, a, this, and that ...
data("stop_words")
descript_df <- descript_df %>% anti_join(stop_words)
top50 <- descript_df[1:50,]
next50 <- descript_df[51:100,]
top50 %>%
count(word, sort = TRUE) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(n, word)) +
geom_col() +
labs(y = NULL)
next50 %>%
count(word, sort = TRUE) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(n, word)) +
geom_col() +
labs(y = NULL)
View(listings)
View(descript_df)
View(top50)
top50 %>%
count(word, sort = TRUE) %>%
mutate(word = reorder(word, n))
descript_df %>%
count(word, sort = TRUE) %>%
mutate(word = reorder(word, n))
result <- descript_df %>%
count(word, sort = TRUE) %>%
mutate(word = reorder(word, n))
result[1:50] %>%
ggplot(aes(n, word)) +
geom_col() +
labs(y = NULL)
result[1:50,] %>%
ggplot(aes(n, word)) +
geom_col() +
labs(y = NULL)
result[51:100,]%>%
ggplot(aes(n, word)) +
geom_col() +
labs(y = NULL)
match('WA', listings$location)
location <- unlist(strsplit(listings$location, ","))
location
W <- int()
W <- integer()
E <- integer()
west <- c("WA","CA")
east <- c("MA","NY","FL")
W <- integer()
E <- integer()
for(i in 1:nrow(listings)){
location <- unlist(strsplit(listings[i]$location, ","))
if (west %in% location){
W <- rbind(W,i)
} else if (east %in% location){
E <- rbind(E,i)
}
}
west <- c("WA","CA")
east <- c("MA","NY","FL")
W <- integer()
E <- integer()
for(i in 1:nrow(listings)){
location <- unlist(strsplit(listings$location[i], ","))
if (west %in% location){
W <- rbind(W,i)
} else if (east %in% location){
E <- rbind(E,i)
}
}
unlist(strsplit(listings$location[1], ","))
west %in% location
east %in% location
west <- c(" WA"," CA")
east <- c(" MA"," NY"," FL")
east %in% unlist(strsplit(listings$location[1], ","))
unlist(strsplit(listings$location[1], ","))[2]
location <- unlist(strsplit(listings$location[1], ","))[2]
location %in% west
location %in% east
for(i in 1:nrow(listings)){
location <- unlist(strsplit(listings$location[i], ","))[2]
if (location %in% west){
W <- rbind(W,cbind(i))
} else if (location %in% east){
E <- rbind(E,cbind(i))
}
}
View(W)
View(E)
listings[1,]
for(i in W){
west_city <- rbind(west_city,as.data.frame(cbind(listings[i,])))
}
west_city <- data.frame()
for(i in W){
west_city <- rbind(west_city,as.data.frame(cbind(listings[i,])))
}
View(west_city)
east_city <- data.frame()
for(i in E){
east_city <- rbind(east_city,as.data.frame(cbind(listings[i,])))
}
View(east_city)
f <- function(df){
text <- df$description
descript_df <- tibble(line = 1:nrow(df), text = text)
descript_df <- descript_df %>% unnest_tokens(word, text)
##  Remove stop-words such as the, a, this, and that ...
data("stop_words")
descript_df <- descript_df %>% anti_join(stop_words)
result <- descript_df %>%
count(word, sort = TRUE) %>%
mutate(word = reorder(word, n))
return(result)
}
f(west_city)
f(west_city) %>%
ggplot(aes(n, word)) +
geom_col() +
labs(y = NULL)
f(west_city)[1:50] %>%
ggplot(aes(n, word)) +
geom_col() +
labs(y = NULL)
f(west_city)[1:50,] %>%
ggplot(aes(n, word)) +
geom_col() +
labs(y = NULL)
f(listings)[1:50,] %>%
ggplot(aes(n, word)) +
geom_col() +
labs(y = NULL)
f(listings)[51:100,]%>%
ggplot(aes(n, word)) +
geom_col() +
labs(y = NULL)
f(west_city)[1:50,] %>%
ggplot(aes(n, word)) +
geom_col() +
labs(y = NULL)
f(east_city)[1:50,] %>%
ggplot(aes(n, word)) +
geom_col() +
labs(y = NULL)
View(listings)
View(listings)
listings %>%
count(title, sort = TRUE)
title_count <- listings %>%
count(title, sort = TRUE)
View(title_count)
install.packages("wordcloud")
library(wordcloud)
title_count <- listings %>%
count(title, sort = TRUE)
wordcloud(words = title_count$title, freq = title_count$n, min.freq = 2, random.order = FALSE)
title_count <- listings %>%
count(title, sort = TRUE)
wordcloud(words = title_count$title, freq = title_count$n, min.freq = 2,
random.order = FALSE, colors=brewer.pal(8, "Dark2"))
title_count <- listings %>%
count(title, sort = TRUE)
wordcloud(words = title_count$title, freq = title_count$n, min.freq = 2,
random.order = FALSE, rot.per=0.35, colors=brewer.pal(8, "Dark2"))
title_count <- listings %>%
count(title, sort = TRUE)
wordcloud(words = title_count$title, freq = title_count$n,
random.order = FALSE, rot.per=0.35, colors=brewer.pal(8, "Dark2"))
title_count <- listings %>%
count(title, sort = TRUE)
wordcloud(words = title_count$title, freq = title_count$n, min.freq = 2,
random.order = FALSE, rot.per=0.35, colors=brewer.pal(8, "Dark2"))
title_count <- listings %>%
count(title, sort = TRUE)
wordcloud(words = title_count$title, freq = title_count$n, min.freq = 2,
random.order = FALSE,  colors=brewer.pal(8, "Dark2"))
library(wordcloud2)
library(wordcloud)
title_count <- listings %>%
count(title, sort = TRUE)
wordcloud(words = title_count$title, freq = title_count$n, min.freq = 2,
random.order = FALSE)
title_count <- listings %>%
count(title, sort = TRUE)
wordcloud(words = title_count$title, freq = title_count$n, min.freq = 2,
random.order = FALSE, ,  colors=brewer.pal(8, "PuRd"))
title_count <- listings %>%
count(title, sort = TRUE)
wordcloud(words = title_count$title, freq = title_count$n, min.freq = 2,
random.order = FALSE, ,  colors=brewer.pal(8, "Set3"))
title_count <- listings %>%
count(title, sort = TRUE)
wordcloud(words = title_count$title, freq = title_count$n, min.freq = 2,
random.order = FALSE, ,  colors=brewer.pal(8, "Set1"))
title_count <- listings %>%
count(title, sort = TRUE)
wordcloud(words = title_count$title, freq = title_count$n, min.freq = 2,
random.order = FALSE, ,  colors=brewer.pal("Set1"))
title_count <- listings %>%
count(title, sort = TRUE)
wordcloud(words = title_count$title, freq = title_count$n, min.freq = 2,
random.order = FALSE, ,  colors=brewer.pal(3,"Set1"))
title_count <- listings %>%
count(title, sort = TRUE)
wordcloud(words = title_count$title, freq = title_count$n, min.freq = 2,
random.order = FALSE, ,  colors=brewer.pal(8,"Set1"))
Github_<- jsonlite::fromJSON("https://jobs.github.com/positions?utf8=%E2%9C%93&description=data+science&location=", flatten=TRUE)
Github_<- jsonlite::fromJSON("https://jobs.github.com/positions.json?description=data+science&location=", flatten=TRUE)
View(Github)
Github <- jsonlite::fromJSON("https://jobs.github.com/positions.json?description=data+science&location=", flatten=TRUE)
View(Github)
Github$description <- gsub("<.*?>", "", Github$description)
View(Github)
title_count <- listings %>%
count(title, sort = TRUE)
wordcloud(words = title_count$title, freq = title_count$n, min.freq = 2,
random.order = FALSE, ,  colors=brewer.pal(8,"Set1"))
f(Github$description) %>%
ggplot(aes(n, word)) +
geom_col() +
labs(y = NULL)
f(Github) %>%
ggplot(aes(n, word)) +
geom_col() +
labs(y = NULL)
f(Github)[1:50,] %>%
ggplot(aes(n, word)) +
geom_col() +
labs(y = NULL)
f(listings)[1:50,] %>%
ggplot(aes(n, word, fill=word, label=n)) +
geom_col() +
labs(y = NULL)
f(listings)[51:100,]%>%
ggplot(aes(x = n, y = word, fill = word, labels = n)) +
labs(y = NULL)
f(listings)[51:100,]%>%
ggplot(aes(x = n, y = word, fill = word, labels = n)) +
geom_col() +
labs(y = NULL)
f(listings)[51:100,]%>%
ggplot(aes(x = n, y = word, fill = word, labels = n)) +
geom_col() +
labs(y = NULL) +
geom_label(aes(fill = word),colour = "white", fontface = "bold", show.legend = FALSE)
f(listings)[51:100,]%>%
ggplot(aes(x = n, y = word, fill = word, labels = n)) +
geom_col() +
labs(title = "Top 20 Most Used Words in Movie Title", x = "Word", y = "Word Count") +
geom_label(aes(fill = word),colour = "white", fontface = "bold", show.legend = FALSE)
f(listings)[51:100,]%>%
ggplot(aes(x = n, y = word, fill = word, labels = n)) +
geom_col() +
labs(title = "Top 20 Most Used Words in Movie Title", x = "Word", y = "Word Count") +
geom_label(aes(fill = word, label = n),colour = "white", fontface = "bold", show.legend = FALSE)
f(listings)[51:100,]%>%
ggplot(aes(x = n, y = word, fill = word, labels = n)) +
geom_bar(stat="identity", show.legend = FALSE) +
coord_flip() +
labs(title = "Top 20 Most Used Words in Movie Title", x = "Word", y = "Word Count") +
geom_label(aes(fill = word, label = n),colour = "white", fontface = "bold", show.legend = FALSE)
f(listings)[51:100,]%>%
ggplot(aes(x = n, y = word, fill = word, labels = n)) +
geom_bar(stat="identity", show.legend = FALSE) +
labs(title = "Top 20 Most Used Words in Movie Title", x = "Word", y = "Word Count") +
geom_label(aes(fill = word, label = n),colour = "white", fontface = "bold", show.legend = FALSE)
f(listings)[51ï¼š80,]%>%
ggplot(aes(x = n, y = word, fill = word, labels = n)) +
geom_bar(stat="identity", show.legend = FALSE) +
labs(title = "Top 20 Most Used Words in Movie Title", x = "Word", y = "Word Count") +
geom_label(aes(fill = word, label = n),colour = "white", fontface = "bold", show.legend = FALSE)
f(listings)[51:80,]%>%
ggplot(aes(x = n, y = word, fill = word, labels = n)) +
geom_bar(stat="identity", show.legend = FALSE) +
labs(title = "Top 20 Most Used Words in Movie Title", x = "Word", y = "Word Count") +
geom_label(aes(fill = word, label = n),colour = "white", fontface = "bold", show.legend = FALSE)
f(listings)[51:71,]%>%
ggplot(aes(x = n, y = word, fill = word, labels = n)) +
geom_bar(stat="identity", show.legend = FALSE) +
labs(title = "Top 20 Most Used Words in Movie Title", x = "Word", y = "Word Count") +
geom_label(aes(fill = word, label = n),colour = "white", fontface = "bold", show.legend = FALSE)
f(listings)[1:40,] %>%
ggplot(aes(x = n, y = word, fill=word, label=n)) +
geom_col() +
labs(y = NULL)
f(west_city)[1:50,] %>%
ggplot(aes(x = n, y = word, fill=word, label=n)) +
geom_col() +
labs(y = NULL)
f(east_city)[1:50,] %>%
ggplot(aes(x = n, y = word, fill=word, label=n)) +
geom_col() +
labs(y = NULL)
f(Github)[1:50,] %>%
ggplot(aes(x = n, y = word, fill=word, label=n)) +
geom_col() +
labs(y = NULL)
f(listings)[1:40,]%>%
ggplot(aes(x = n, y = word, fill = word, labels = n)) +
geom_bar(stat="identity", show.legend = FALSE) +
labs(title = "Top 20 Most Used Words in Movie Title", x = "Word", y = "Word Count") +
geom_label(aes(fill = word, label = n),colour = "white", fontface = "bold", show.legend = FALSE)
f(listings)[1:20,]%>%
ggplot(aes(x = n, y = word, fill = word, labels = n)) +
geom_bar(stat="identity", show.legend = FALSE) +
labs(title = "Top 20 Most Used Words in Movie Title", x = "Word", y = "Word Count") +
geom_label(aes(fill = word, label = n),colour = "white", fontface = "bold", show.legend = FALSE)
f(listings)[51:71,]%>%
ggplot(aes(x = n, y = word, fill = word, labels = n)) +
geom_bar(stat="identity", show.legend = FALSE) +
labs(title = "No.51 - No.71 Hot words in job description", x = "Word Count", y = "Word") +
geom_label(aes(fill = word, label = n),colour = "white", fontface = "bold", show.legend = FALSE)
f(listings)[1:40,] %>%
ggplot(aes(x = n, y = word, fill=word, label=n)) +
geom_col() +
labs(title = "No.1 - No.40 Hot words in job description", x = "Word Count", y = "Word")
f(west_city)[1:50,] %>%
ggplot(aes(x = n, y = word, fill=word, label=n)) +
geom_col() +
labs(title = "No.1 - No.50 Hot words in job description", x = "Word Count", y = "Word")
f(east_city)[1:50,] %>%
ggplot(aes(x = n, y = word, fill=word, label=n)) +
geom_col() +
labs(title = "No.1 - No.50 Hot words in job description", x = "Word Count", y = "Word")
f(Github)[1:50,] %>%
ggplot(aes(x = n, y = word, fill=word, label=n)) +
geom_col() +
labs(title = "No.1 - No.50 Hot words in job description", x = "Word Count", y = "Word")
f(Github)[1:50,] %>%
ggplot(aes(x = n, y = word, fill=word, label=n)) +
geom_col() +
labs(title = "Top 50 Hot words in job description", x = "Word Count", y = "Word")
f(Github)[1:50,] %>%
ggplot(aes(x = n, y = word, fill=word, label=n)) +
geom_col() +
labs(title = "Top 50 hot words in job description", x = "Word Count", y = "Word")
f(east_city)[1:50,] %>%
ggplot(aes(x = n, y = word, fill=word, label=n)) +
geom_col() +
labs(title = "Top50 hot words in job description", x = "Word Count", y = "Word")
f(west_city)[1:50,] %>%
ggplot(aes(x = n, y = word, fill=word, label=n)) +
geom_col() +
labs(title = "Top50 hot words in job description", x = "Word Count", y = "Word")
f(listings)[1:40,] %>%
ggplot(aes(x = n, y = word, fill=word, label=n)) +
geom_col() +
labs(title = "Top 40 Hot words in job description", x = "Word Count", y = "Word")
f(listings)[41:61,]%>%
ggplot(aes(x = n, y = word, fill = word, labels = n)) +
geom_bar(stat="identity", show.legend = FALSE) +
labs(title = "No.51 - No.71 Hot words in job description", x = "Word Count", y = "Word") +
geom_label(aes(fill = word, label = n),colour = "white", fontface = "bold", show.legend = FALSE)
f(listings)[41:61,]%>%
ggplot(aes(x = n, y = word, fill = word, labels = n)) +
geom_bar(stat="identity", show.legend = FALSE) +
labs(title = "No.41 - No.61 Hot words in job description", x = "Word Count", y = "Word") +
geom_label(aes(fill = word, label = n),colour = "white", fontface = "bold", show.legend = FALSE)
head(listings,n=5)
f(west_city)[1:50,] %>%
ggplot(aes(x = n, y = word, fill=word, label=n)) +
geom_col() +
labs(title = "West Coast Top50 hot words", x = "Word Count", y = "Word")
f(east_city)[1:50,] %>%
ggplot(aes(x = n, y = word, fill=word, label=n)) +
geom_col() +
labs(title = "East Coast Top50 hot words", x = "Word Count", y = "Word")
listings <- read.csv("listings.csv",header=TRUE)
setwd("~/")
setwd("D:/MA615/Final_Project/Indeed")
listings <- read.csv("listings.csv",header=TRUE)
listings$description <- gsub("[^0-9A-Za-z ]", "" , listings$description,ignore.case = TRUE)
head(listings,n=5)
f(listings)[1:40,] %>%
ggplot(aes(x = n, y = word, fill=word, label=n)) +
geom_col() +
labs(title = "Top 40 Hot words in job description", x = "Word Count", y = "Word")
f(listings)[41:61,]%>%
ggplot(aes(x = n, y = word, fill = word, labels = n)) +
geom_bar(stat="identity", show.legend = FALSE) +
labs(title = "No.41 - No.61 Hot words in job description", x = "Word Count", y = "Word") +
geom_label(aes(fill = word, label = n),colour = "white", fontface = "bold", show.legend = FALSE)
# define cities in WA and CA as west, cities in MA, NY, and FL as east
west <- c(" WA"," CA")
east <- c(" MA"," NY"," FL")
# find their index
W <- integer()
E <- integer()
for(i in 1:nrow(listings)){
location <- unlist(strsplit(listings$location[i], ","))[2]
if (location %in% west){
W <- rbind(W,cbind(i))
} else if (location %in% east){
E <- rbind(E,cbind(i))
}
}
# separate city in west side and east side
west_city <- data.frame()
east_city <- data.frame()
for(i in W){
west_city <- rbind(west_city,as.data.frame(cbind(listings[i,])))
}
for(i in E){
east_city <- rbind(east_city,as.data.frame(cbind(listings[i,])))
}
f(west_city)[1:50,] %>%
ggplot(aes(x = n, y = word, fill=word, label=n)) +
geom_col() +
labs(title = "West Coast Top50 hot words", x = "Word Count", y = "Word")
f(east_city)[1:50,] %>%
ggplot(aes(x = n, y = word, fill=word, label=n)) +
geom_col() +
labs(title = "East Coast Top50 hot words", x = "Word Count", y = "Word")
listings$description <- gsub("[^0-9A-Za-z ]", "" , listings$description,ignore.case = TRUE)
f <- function(df){
text <- df$description
descript_df <- tibble(line = 1:nrow(df), text = text)
descript_df <- descript_df %>% unnest_tokens(word, text)
##  Remove stop-words such as the, a, this, and that ...
data("stop_words")
descript_df <- descript_df %>% anti_join(stop_words)
result <- descript_df %>%
count(word, sort = TRUE) %>%
mutate(word = reorder(word, n))
return(result)
}
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
write.csv(githubJob,"D:\\MA615\\github.csv",row.names=TRUE)
write.csv(github,"D:\\MA615\\github.csv",row.names=TRUE)
write.csv(Github,"D:\\MA615\\github.csv",row.names=TRUE)
github <- read.csv("github.csv")
runApp()
runApp()
runApp()
write.csv(west_city,"D:\\MA615\\west.csv",row.names=TRUE)
write.csv(east_city,"D:\\MA615\\east.csv",row.names=TRUE)
west <- read.csv("west.csv")
east <- read.csv("east.csv")
runApp()
runApp()
runApp()
runApp()
runApp()
f(Github)[1:50,] %>%
ggplot(aes(x = n, y = word, fill=word, label=n)) +
geom_col() +
labs(title = "Github Top 50 hot words", x = "Word Count", y = "Word")
runApp()
